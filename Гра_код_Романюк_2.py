from itertools import permutations  

# Визначаємо можливі зміни цифр або знаків при додаванні або видаленні сірників
matchsticks_changes = {
    '0': ['8'],  # 0 може стати 8
    '1': ['7'],  # 1 може стати 7
    '3': ['8'],  # 3 може стати 8
    '4': ['9'],  # 4 може стати 9
    '5': ['6', '8'],  # 5 може стати 6 або 8
    '6': ['8'],  # 6 може стати 8
    '9': ['8'],  # 9 може стати 8
    '2': ['8'],  # 2 може стати 8
    '7': ['3'],  # 7 може стати 3
    '+': ['='],  # + може змінитися на =
    '=': ['+'],  # = може змінитися на +
}

# Функція, що перевіряє, чи можна отримати коректне рівняння після зміни сірників
def solve_matchstick_puzzle(equation):
    left, right = equation.split("=")  # Розбиваємо рівняння на ліву і праву частину

    # Перебираємо всі можливі зміни з додаванням 1 або 2 сірників
    for num_matches in [1, 2]:  
        for i in range(len(equation)):  # Проходимо по всіх символах рівняння
            for change in matchsticks_changes.get(equation[i], []):  # Отримуємо всі можливі заміни для символу
                new_equation = equation[:i] + change + equation[i+1:]  # Формуємо новий вираз

                if evaluate(new_equation):  # Якщо вираз став правильним рівнянням
                    print(f"Рішення з {num_matches} сірником(ами): {new_equation}")
                    return  # Завершуємо пошук після першого знайденого рішення

    print("Рішення не знайдено з 1 або 2 сірниками.")

# Функція перевірки правильності рівняння
def evaluate(expression):
    try:
        left, right = expression.split("=")  # Розділяємо вираз на ліву та праву частину
        return eval(left) == eval(right)  # Використовуємо eval для обчислення і перевіряємо рівність
    except:
        return False  # Якщо сталася помилка (наприклад, неправильний формат), повертаємо False

# Головний блок виконання програми
if __name__ == "__main__":
    equation = input("Введіть рівняння (наприклад, 3+3=5): ")  # Отримуємо рівняння від користувача
    solve_matchstick_puzzle(equation)  # Викликаємо функцію пошуку рішення